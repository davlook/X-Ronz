function() {

    var closeBal, cbaldemo, cbalreal, oldtrass, alertxt, t, vfx, as, ams, ws, mes, revsave, orate, crate, sufx, sufxco, suffx, wamount, amount, minamount, maxamount, maxbalance, curacc, demobal, realbal, curcur, baltype, sumdeal, marti, direct, md, bs, ss, ctxt = 0,
        intervSD = 0, clocktime = 0, cbal = 0, chkcandle = 0, run = 0, ref = 1, aref = 1, ires = "win", dura = 1, trass = "Z-CRY/IDX", group = "demo";

    function e(e) {
        return (document.cookie.match("(^|;) *" + e + "=([^;]*)") || [])[2]
    }

    function b(e) {
        var t = document.getElementById("dBot"); t.style.position = "sticky", t.style.top = e.clientY - 26 + "px", t.style.left = e.clientX - 360 + "px"
    }

    function a() {
        $("#timeutc > span").text((new Date).toLocaleTimeString())
    }

    function s(e, a, s, o) {
        var c = JSON.parse(sessionStorage.getItem("SG")),
            u = c.findIndex(a => a.ric === e); - 1 !== u && (l = c[u].SD, r = c[u].Buyer, n = c[u].Seller, c[u].SD = l += a, c[u].Buyer = r += s, c[u].Seller = n += o, c[u].Signal = c[u].Buyer > c[u].Seller ? "Buy" : c[u].Buyer < c[u].Seller && "Sell"), sessionStorage.setItem("SG", JSON.stringify(c)), 3 == Number($("#bel_strg").val()) && ("Buy" == c[u].Signal ? $('label[sigric="' + e + '"]').text(ico.up).css("color", "#14c679") : $('label[sigric="' + e + '"]').text(ico.down).css("color", "#ff7171"))
    }

    function o() {
        for (var e = document.querySelectorAll("span#rate"), a = 0; a < e.length; a++) parseInt(document.querySelectorAll("span#rate")[a].innerText) >= document.querySelector("#filteric").value ? document.querySelectorAll("#bel_pairs > .form-asset")[a].setAttribute("style", "width: 240px;display: list-item;transition: all 1s ease-out 0s;padding: 8px;") : document.querySelectorAll("#bel_pairs > .form-asset")[a].setAttribute("style", "display: none;transition: all 1s ease-out 0s;padding: 8px;")
    }

    function c() {
        switch (Number($("#bel_strg").val())) {
            case 0:
                if (1 == chkcandle) {
                    if (0 != (new Date).getUTCSeconds().toString()) return setTimeout(c, 500);
                    u()
                } else direct = "loose" == ires ? "call" == direct ? "put" : "call" : "call" == direct ? "call" : "put";
                break;
            case 1:
                if (1 == chkcandle) {
                    if (0 != (new Date).getUTCSeconds().toString()) return setTimeout(c, 500);
                    u()
                } else direct = "loose" == ires ? "call" == direct ? "call" : "put" : "call" == direct ? "put" : "call";
                break;
            case 2:
            case 3:
                if (1 == chkcandle) {
                    if (0 != (new Date).getUTCSeconds().toString()) return setTimeout(c, 500);
                    if (ico.down == document.querySelector('[sigric="' + trass + '"]').innerText) direct = "put";
                    else {
                        if (ico.up != document.querySelector('[sigric="' + trass + '"]').innerText) return setTimeout(c, 1e3);
                        direct = "call"
                    }
                } else if (ico.down == document.querySelector('[sigric="' + trass + '"]').innerText) direct = "put";
                else {
                    if (ico.up != document.querySelector('[sigric="' + trass + '"]').innerText) return setTimeout(c, 1e3);
                    direct = "call"
                }
        }! function e() {
            var a = parseInt($('input[name="lasset"]:checked').attr("winr"));
            if (a < $("#bel_profit").val()) return console.log("Low Winrate : " + a + " %"), setTimeout(e, 5e3);
            wamount = $("#bel_amount").val(), "loose" == ires ? amount = (sumdeal = amount) * $("#bel_coef").val() : "win" == ires && (amount = wamount), ref += 1, setTimeout(function() {
                ws.send('{"topic":"bo","event":"create","payload":{"asset":"' + trass + '","expire_at":' + (60 * Math.ceil((Math.ceil((new Date).getTime() / 1e3) + 30) / 60) + 60 * (dura - 1)) + ',"amount":' + parseInt(amount) + '00,"created_at":' + (new Date).getTime() + ',"option_type":"turbo","deal_type":"' + group + '","trend":"' + direct + '"},"ref":"' + ref + '","join_ref":"1"}'), botlog = "Order Send :: Amount : " + Math.floor(amount) + " -- Direction : " + direct + " -- Asset : " + trass + " -- Account : " + group + " -- Procent : " + a + "% -- Duration : " + dura + " min.", console.log(botlog), cbal = 0
            }, 1e3 * $("#bel_delay").val())
        }()
    }
    async function u() {
        res = await(xh = await fetch("https://api." + location.host + "/platform/candles/" + trass.replace("/", "%2F") + "/" + (new Date).getUTCFullYear() + "-" + ("0" + ((new Date).getUTCMonth() + 1).toString()).slice(-2) + "-" + ("0" + (new Date).getUTCDate().toString()).slice(-2) + "T00:00:00/60?locale=en")).json();
        var e, a, s = [];
        for (a in e = res.data.slice(-3)) s.push({ ric: trass, timeZ: e[a].created_at, open: e[a].open, high: e[a].high, low: e[a].low, close: e[a].close }), sessionStorage.setItem("ric-Z", JSON.stringify(s));
        console.log(e), JSON.parse(sessionStorage.getItem("ric-Z"))[1], direct = e.close > e.open ? "call" : "put"
    }
    $("app-header").hasClass("accdis") ? $("app-header").removeClass("accdis") : console.log("app-header cleared"), $("#qa_trading_profileDropdownButton").before('<button style="margin-right: 20px; width: 180px; pointer-events: none;" type="button" class="bel_btn bel_btn-outline-light" id="belobot_po" data-toggle="modal" data-target="#exampleModal"><span class="sr-only text-light" style="position: relative;bottom: 6px;">Loading...</span><div class="spinner-grow text-info" role="status"></div></button>'), $("body").prepend('<div class="toast" data-autohide="false" style="z-index: 100; position: absolute;top: 140px;left: 120px;width: 280px;"> <div class="toast-header"> <strong class="mr-auto text-info" id="toastcur"></strong> <small class="text-muted" id="toastdur"></small> <button type="button" class="ml-2 mb-1 close" data-dismiss="toast">\xd7</button> </div> <div class="toast-body"> Some text inside the toast body </div></div><small><div class="modal" tabindex="-1" role="dialog" id="exampleModal" style="color:#000"><div id="dBot" class="modal-dialog modal-lg" style="max-width: fit-content;" role="document"><div class="modal-content" style="min-width: 700px;user-select: none;"><div class="modal-header" style="background: #232938;color: #f4f4f6;"><h5 class="modal-title" style="height: 28px;"></h5><span class="" style="float: left;position: absolute;top: 10px;font-size: large;font-weight: 600;">Binomo BOT [<span style="color: navajowhite;">AUTOTRADE</span>]</span><span class="" style="float: left;position: absolute;top: 30px;left: 16px;font-size: small;color: navajowhite;">----------------------- Expert AutoTrade</span><span id="tmv">Move</span><div class="row" style="position: relative;right: 14px;"><div id="acctype" class="pagination justify-content-end"><button id="realacc" class="page-item" style="pointer-events: none;"><a class="page-link" href="javascript:void(0);" style="background: #dee2e6;">Real Account</a></button><button id="demoacc" class="page-item"><a class="page-link" href="javascript:void(0);" style="background: #ffffff;">Demo Account</a></button></div></div><button type="button" class="close" data-dismiss="modal" aria-label="Close" style="display: none;"><span aria-hidden="true">&times;</span></button></div><div class="modal-body"><div class="container-fluid"><div class="row"><div id="asrefresh" class="col-md-5"><div class="cscroll" style="max-height: 280px;min-height: 280px;max-width: 280px;overflow-x: hidden;"><table class="bel_table" id="bel_pairs"></table></div></div><div class="col-md-7" id="info"></div></div><div class="row" style="position: absolute;right: 30px;bottom: 10px;"><div class="pagination justify-content-end" style=""><span id="pset" class="page-item"><a class="page-link" href="javascript:void(0);">Previous</a></span><span id="nset" class="page-item"><a class="page-link" href="javascript:void(0);">Next</a></span></div></div></div></div><div class="modal-footer" style="background: #232938;color: #f4f4f6;"><div id="useid" style="position: absolute;left: 18px;bottom: 42px;">Binomo ID :</div><div id="curid" style="position: absolute;left: 14px;bottom: 26px;">Currency :</div><div id="timeutc" style="position: absolute;left: 14px;bottom: 10px;">Broker Time : <span style="color: navajowhite;""></span></div><button type="button" class="bel_btn bel_btn-success" id="start_stop" style="width:140px"></button><button type="button" class="bel_btn bel_clo bel_btn-secondary" data-dismiss="modal">Close</button></div></div></div></div>'), $.get({
        url: "https://api." + location.host + "/platform/private/profile?locale=" + e("locale"),
        xhrFields: {
            withCredentials: !0
        },
        headers: {
            "Content-Type": "application/json",
            "Authorization-Token": e("authtoken"),
            "Device-Id": e("device_id"),
            "Device-Type": "web"
        }
    }).done(function(a) {
        $.get({
            url: "https://api." + location.host + "/bank/v1/read?locale=" + e("locale"),
            xhrFields: {
                withCredentials: !0
            },
            headers: {
                "Content-Type": "application/json",
                "Authorization-Token": e("authtoken"),
                "Device-Id": e("device_id"),
                "Device-Type": "web"
            }
        }).done(function(s) {
            $.get({
                url: "https://api." + location.host + "/platform/private/v2/currencies?locale=" + e("locale"),
                xhrFields: {
                    withCredentials: !0
                },
                headers: {
                    "Content-Type": "application/json",
                    "Authorization-Token": e("authtoken"),
                    "Device-Id": e("device_id"),
                    "Device-Type": "web"
                }
            }).done(function(e) {
                console.log(e.data), $.get("https://raw.githubusercontent.com/davlook/X-Ronz/main/Global/reqaut.txt", function(e) {
                    sessionStorage.setItem("serv auth", e), console.log(sessionStorage.getItem("serv auth").split(","))
                }, "text"), $.get("https://raw.githubusercontent.com/davlook/X-Ronz/main/Global/reqgetusid.txt", function(e) {
                    console.log(e), sessionStorage.setItem("usr", e), alertxt = e.includes(a.data.id) ? (ctxt = 1, $(".cscroll").css("min-height", "280px"), $("#realacc").css("pointer-events", "auto"), '<div class="alert alert-primary" role="alert" id="bel_mes">Thank you for registering. Questions can be left on <a href="https://t.me/noobenq" target="_blank"><strong>TELEGRAM</strong></a></div>') : (ctxt = 0, $(".cscroll").css("min-height", "320px"), $("#realacc").css("pointer-events", "none"), '<div class="alert alert-warning" role="alert" id="bel_mes">To trade on a live account, you must register an account using this <strong id="regme" style="cursor: pointer;">Registration link</strong> and <strong>confirm your Binomo ID</strong> on <a href="https://t.me/noobenq" target="_blank"><strong>TELEGRAM</strong></a></div>'), "free" == a.data.status_group && 1 == ctxt && ($(".cscroll").css("min-height", "300px"), $("#realacc").css("pointer-events", "none"), alertxt = '<div class="alert alert-success" role="alert" id="bel_mes">Thank you for registering, to use full feature please make <strong id="addfund" style="cursor: pointer;">DEPOSIT</strong></a> to your account. Questions can be left on <a href="https://t.me/noobenq" target="_blank"><strong>TELEGRAM</strong></a></div>')
                }, "text"), amount = e.data.list[0].limits.binary_option.min.toString().slice(0, -2), minamount = e.data.list[0].limits.binary_option.min.toString().slice(0, -2), maxamount = e.data.list[0].limits.binary_option.max.toString().slice(0, -2), suffx = e.data.list[0].unit
            }), realbal = "demo" == s.data[0].account_type ? (demobal = s.data[0].amount / 100, s.data[1].amount / 100) : (demobal = s.data[1].amount / 100, s.data[0].amount / 100), maxbalance = demobal, curcur = s.data[0].currency, console.log(s.data), console.log(a.data), console.log("cook auth : " + e("a")), console.log("Status : " + a.data.status_group), $("#useid").append("<span style='color: navajowhite;'>  " + a.data.id + "</span>"), $("#curid").append("<span style='color: navajowhite;'>  " + a.data.currency + " - Geo </span><span style='color: navajowhite;'>  (" + a.data.country_name + ")</span>")
        })
    }), $.get({
        url: "https://api." + location.host + "/platform/private/v3/assets?locale=" + e("locale"),
        headers: {
            "Authorization-Token": e("authtoken"),
            "Device-Id": e("device_id"),
            "Device-Type": "web"
        }
    }).done(function(e) {
        var a = (new Date).getUTCDay();
        function s(e) {
            return ({
                0: "sun", 1: "mon", 2: "tue", 3: "wed", 4: "thu", 5: "fri", 6: "sat"
            })[e]
        }
        var o, c, u = 10 <= (new Date).getUTCHours() ? (new Date).getUTCHours() + ":" + (new Date).getUTCMinutes() : "0" + (new Date).getUTCHours() + ":" + (new Date).getUTCMinutes();
        for (o in e.data.assets) 1 == e.data.assets[o].active && 0 < e.data.assets[o].trading_tools_settings.option.base_payment_rate_turbo && u > e.data.assets[o].trading_tools_settings.option.schedule[s(a)][0][0] && u < e.data.assets[o].trading_tools_settings.option.schedule[s(a)][0][1] && -1 != e.data.assets[o].trading_tools_settings.option.enabled_account_types.indexOf("demo") && $("#bel_pairs").append('<div class="form-asset" style="width: 240px;display: list-item;padding: 8px;"> <label class="form-asset-label" style="margin: 0;"> <input type="radio" class="form-asset-input" id="' + e.data.assets[o].id + '" value="' + e.data.assets[o].ric + '" name="lasset" winr="' + e.data.assets[o].trading_tools_settings.option.base_payment_rate_turbo + '"><span id="rate" cric="' + e.data.assets[o].ric + '" style="margin-left: 12px;">' + e.data.assets[o].trading_tools_settings.option.base_payment_rate_turbo + " %</span>&emsp;" + e.data.assets[o].name + '</label><label sigric="' + e.data.assets[o].ric + '" id="sigarr" style="margin-left: 10px;float: right;">'+ ico.non +'</label><span ric="' + e.data.assets[o].ric + '" class="bars" data-bars="0" id="bars" style="left: 170px;float: right;bottom: 10px;"><span></span><span></span><span></span><span></span></span></div>');
        document.querySelector('input[value="Z-CRY/IDX"]').checked = !0;
        var m = [], b = [...document.querySelectorAll("input[name=lasset]")].map(e => e.value), g = JSON.parse(sessionStorage.getItem("SG") || "[]");
        for (c in m.push(JSON.stringify(b)), sessionStorage.setItem("assets", m), b) g.push({ ric: b[c], SD: 0, Buyer: 0, Seller: 0, Signal: "" }), sessionStorage.setItem("SG", JSON.stringify(g))
    }), u(), setTimeout(function() {
        $("#belobot_po").html("Robot ready"), $("#belobot_po").css("pointer-events", "auto"), $("#info").append(alertxt), $("#info").append('<div class="row" style="margin-bottom: 10px;color: #004085;"><div class="col-sm-4" id="curacc"><strong>Demo Account</strong></div><div class="col-sm-8"><span id="curbald" style="float: right;font-weight: 600;display: block;">' + demobal.toLocaleString() + " " + curcur + '</span><span id="curbalr" style="float: right;font-weight: 600;display:none;">' + realbal.toLocaleString() + " " + curcur + "</span></div></div>"), $("#info").append('<div class="container-fluid" id="settings" style="display: block;min-width: 360px;color: #3e3f45;"></div>'), $("#info").append('<div class="container-fluid" id="settings2" style="display: none;min-width: 360px;color: #3e3f45;"></div>'), $("#asrefresh").prepend('<span>Trading Assets <span id="totass" class="badge badge-pill badge-info"></span></span><div class="col-sm-5" style="display: inline-block;margin-bottom: 8px;left: 48px;"><span style="position: absolute;right: 100px;top: 6px;">Filter</span><input id="filteric" type="number" min="10" max="83" value="65" class="bel_form-control bel_form-control-sm"><span style="position: absolute;right: 40px;top: 6px;"> %</span></div>'), $("#settings").append('<div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Initial amount</div><div class="col-sm-5"><input id="bel_amount" type="number" min="' + minamount + '" max="' + maxamount + '" step="1" class="bel_form-control bel_form-control-sm"></div><div id="country2" class="col-sm"></div></div><div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Winrate limit</div><div class="col-sm-5"><input id="bel_profit" type="number" min="50" max="90" class="bel_form-control bel_form-control-sm"></div><div class="col-sm">%</div></div><div class="row" style="display:none;margin-bottom: 4px;"><div class="col-sm-5">Coefficient</div><div class="col-sm-5"><input id="bel_cof" step=".1" min="1" value="2.2" type="number" class="bel_form-control bel_form-control-sm"></div><div class="col-sm">~*</div></div>'), $("#settings").append('<div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Delay to deals</div><div class="col-sm-5"><input id="bel_delay" type="number" min="0" max="30" class="bel_form-control bel_form-control-sm"></div><div class="col-sm">sec.</div></div><div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Trading Strategy</div><div class="col-sm-5"><select id="bel_strg" type="number" class="bel_form-control bel_form-control-sm"><option value="0">Follow Trend</option><option value="1">Counter Trend</option><option value="2" selected="">Follow Signal</option><option value="3">Sentiment Signal</option></select></div><div class="col-sm"></div></div>Durations'), $("#settings").append('<div class="row text-center" style="border: 1px solid #aeafb7;border-bottom: none;border-top-left-radius: 4px;border-top-right-radius: 4px;"><div class="col-sm">1m.</div><div class="col-sm">2m.</div><div class="col-sm">3m.</div><div class="col-sm">4m.</div><div class="col-sm">5m.</div></div>'), $("#settings").append('<div class="row" style="border: 1px solid #aeafb7;border-top: none;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;"> <p class="col-sm"> <input type="radio" id="dur1" name="durt" value="1" checked=""> </p> <p class="col-sm"> <input type="radio" id="dur2" name="durt" value="2"> </p> <p class="col-sm"> <input type="radio" id="dur3" name="durt" value="3"> </p><p class="col-sm"> <input type="radio" id="dur4" name="durt" value="4"> </p><p class="col-sm"> <input type="radio" id="dur5" name="durt" value="5"> </p></div>'), $("#settings2").append('<div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Martingale limit</div><div class="col-sm-5"><input id="bel_mar" type="number" min="0" max="30" value="5" class="bel_form-control bel_form-control-sm"></div><div class="col-sm">K</div></div><div class="row" style="margin-bottom: 4px;"><div class="col-sm-5">Coefficient</div><div class="col-sm-5"><input id="bel_coef" step=".1" min="1" value="2.5" max="12" type="number" class="bel_form-control bel_form-control-sm"></div><div class="col-sm">~*</div></div><div class="row" style="margin-bottom: 4px;"><div class="col-sm-4">Max Balance</div><div class="col-sm-6"><input id="bel_maxbal" type="text" min="' + minamount + '" max="' + (parseInt(maxbalance) + Number(minamount)) + '" step="1" class="bel_form-control bel_form-control-sm"></div><div id="country" class="col-sm"></div></div>'), $("#bel_maxbal").val((parseInt(maxbalance) + Number(minamount)).toLocaleString()), $("#bel_delay").val(1), $("#bel_profit").val(75), $("#country").text(suffx), $("#country2").text(suffx), $("#bel_amount").val(amount), $("#bel_pairs").removeAttr("style"), $('input[name="durt"]').click(function() {
                dura = $(this).val(), console.log("Duration : " + dura)
            }), $("#start_stop").click(function() {
                $(this).hasClass("bel_btn-danger") ? (chkcandle = marti = run = 0, ires = "win", amount = $("#bel_amount").val(), $(this).removeClass("bel_btn-danger"), $(this).text("Start"), $("#acctype *").attr("disabled", !1)) : (chkcandle = run = 1, marti = 0, $(this).addClass("bel_btn-danger"), $(this).text("Stop"), $("#acctype *").attr("disabled", !0), c()), sessionStorage.setItem("setBot", JSON.stringify({
                    amount: Number(amount), assets: trass, rate_limit: Number($("#bel_profit").val()), coef: Number($("#bel_coef").val()), delay: Number($("#bel_delay").val()), dur: Number(dura), Marti: Number($("#bel_mar").val()), run: run
                }))
            }), $('input[name="lasset"]').click(function() {
                trass = $(this).val(), console.log("Change Ric : " + trass), u(), console.log($('input[name="lasset"]:checked').parent().text().slice(5)), document.querySelector("asset-tab > button").click(), as.send('{"action":"subscribe","rics":["' + trass + '"]}'), as.send('{"action":"unsubscribe","rics":["' + oldtrass + '"]}')
            }), $("#bel_amount").change(function() {
                console.log("Amount : " + $(this).val())
            }), $("#bel_maxbal").change(function() {
                console.log("Max Balance : " + Number($(this).val().replace(/,/g, "")).toLocaleString()), balval = $(this).val().replace(/,/g, ""), $(this).val(parseFloat(balval).toLocaleString("en-US", {
                    style: "decimal"
                }))
            }), $("#bel_profit").change(function() {
                console.log("WR limit : " + $(this).val())
            }), $("#filteric").change(function() {
                o(), $("#totass").text($("#bel_pairs > div[style*='display: list-item']").length), console.log("Filter WR: " + $(this).val())
            }), $("#bel_coef").change(function() {
                console.log("Coef : " + $(this).val())
            }), $("#bel_delay").change(function() {
                console.log("Delay : " + $(this).val())
            }), $("#bel_mar").change(function() {
                console.log("Marti : " + $(this).val())
            }), $("#bel_strg").change(function() {
                document.querySelectorAll("#bars").forEach(e => e.setAttribute("data-bars", "0")), document.querySelectorAll("#sigarr").forEach(e => (e.innerText = ico.non, e.style = "margin-left: 10px; float: right; color: #54565f;"))
            }), $("#addfund").click(function() {
                $("#add-funds").click()
            }), $("#realacc").click(function() {
                group = "real", console.log("Switch to " + group), $("#curacc > strong").text("Real Account"), $("#curbalr").html(realbal.toLocaleString() + " " + curcur), $("#curbald").css("display", "none"), $("#curbalr").css("display", "block"), $("#realacc > a").css("background", "#ffffff"), $("#demoacc > a").css("background", "#dee2e6")
            }), $("#demoacc").click(function() {
                group = "demo", console.log("Switch to " + group), $("#curacc > strong").text("Demo Account"), $("#curbald").html(demobal.toLocaleString() + " " + curcur), $("#curbalr").css("display", "none"), $("#curbald").css("display", "block"), $("#demoacc > a").css("background", "#ffffff"), $("#realacc > a").css("background", "#dee2e6")
            }), $("#pset").click(function() {
                $("#settings").css("display", "block"), $("#settings2").css("display", "none")
            }), $("#nset").click(function() {
                $("#settings").css("display", "none"), $("#settings2").css("display", "block")
            }), $("#regme").click(function() {
                $.get({
                    url: "https://api." + location.host + "/platform/private/sign_out?locale=" + e("locale"),
                    xhrFields: {
                        withCredentials: !0
                    },
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization-Token": e("authtoken"),
                        "Device-Id": e("device_id"),
                        "Device-Type": "web"
                    }
                }).done(function() {
                    console.log("SignOut")
                })
            }), $("#start_stop").text("Start"), o(), $("#totass").text(document.querySelectorAll("#bel_pairs > div[style*='display: list-item']").length),
            function e() {
                (as = new WebSocket("wss://as." + location.host)).onopen = () => {
                    console.log("as socket opened !"), as.send('{"action":"subscribe","rics":["' + trass + '"]}')
                }, as.onmessage = e => {
                    "assets" == (ams = JSON.parse(e.data).data)[0].action && (asric = ams[0].assets[0].ric, ctrate = ams[0].assets[0].rate, cttime = ams[0].assets[0].created_at.split("T")[1].split(".")[0], oldtrass = ams[0].assets[0].ric, 0 == (new Date).getUTCSeconds() && 14 == (intervSD += 1) && function() {
                        for (p in v = [], d = JSON.parse(sessionStorage.getItem("assets"))) v.push({ ric: d[p], SD: 0, Buyer: 0, Seller: 0, Signal: "" }), sessionStorage.setItem("SG", JSON.stringify(v)), intervSD = 0, console.log("Recall SD !")
                    }())
                }, as.onclose = a => {
                    console.log("as Socket Closed : ", a), e()
                }, as.onerror = e => {
                    as.close(), console.log("as Socket Error : ", e)
                }
            }(),
            function a() {
                (ws = new WebSocket("wss://ws." + location.host + "/?authtoken=" + e("authtoken") + "&device=web&device_id=" + e("device_id") + "&v=2&vsn=2.0.0")).onopen = () => {
                    console.log("Wss Socket opened!"), ws.send('{"topic":"bo","event":"phx_join","payload":{},"ref":"1","join_ref":"1"}'), ws.send('{"topic":"account","event":"phx_join","payload":{},"ref":"2","join_ref":"2"}'),
                        function() {
                            for (i = 0; i < JSON.parse(sessionStorage.getItem("assets")).length; i++) aref += 1, ws.send('{"topic":"asset:' + JSON.parse(sessionStorage.getItem("assets"))[i] + '","event":"phx_join","payload":{},"ref":"' + (ref + aref) + '","join_ref":"' + (ref + aref) + '"}')
                        }(), 1 == ref ? console.log("Wss Success!") : console.log("Wss Failed!")
                }, ws.onclose = e => {
                    ref = 1, clearInterval(intervalWS), console.log("Wss Socket Closed : ", e), a()
                }, ws.onmessage = e => {
                    if (1 == (mes = $.parseJSON(e.data)).ref) {
                        if ("ok" != mes.payload.status) return ws.close(), void console.log("Crit.Error!");
                        refsave = ref += 2, ws.send('{"topic":"bo","event":"ping","payload":{},"ref":"' + ref + '","join_ref":"1"}'), intervalWS = setInterval(function() {
                            ref += 1, ws.send('{"topic":"phoenix","event":"heartbeat","payload":{},"ref":"' + ref + '"}'), ref += 1, ws.send('{"topic":"bo","event":"ping","payload":{},"ref":"' + ref + '","join_ref":"1"}'), ref += 1, ws.send('{"topic":"account","event":"ping","payload":{},"ref":"' + ref + '","join_ref":"2"}'), ref += 2, ws.send('{"topic":"asset","event":"ping","payload":{},"ref":"' + ref + '","join_ref":"' + ref + '"}')
                        }, 6e4)
                    }
                    revsave = 0, "majority_opinion" == mes.event && (e = mes.payload.asset, sessionStorage.getItem("assets").includes(e) && 3 < e.length && (3 == Number($("#bel_strg").val()) ? mes.payload.call == mes.payload.put ? s(e, 1, 0, 0) : mes.payload.call > mes.payload.put ? s(e, 0, 1, 0) : s(e, 0, 0, 1) : 2 == Number($("#bel_strg").val()) && (75 <= mes.payload.call ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "4"), $('label[sigric="' + e + '"]').text(ico.up).css("color", "#14c679")) : mes.payload.call < 75 && 64 < mes.payload.call ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "3"), $('label[sigric="' + e + '"]').text(ico.up).css("color", "#14c679")) : mes.payload.call < 65 && 55 < mes.payload.call ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "2"), $('label[sigric="' + e + '"]').text(ico.stand).css("color", "#ffb850")) : mes.payload.call < 55 && 50 < mes.payload.call ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "1"), $('label[sigric="' + e + '"]').text(ico.non).css("color", "#54565f")) : 75 <= mes.payload.put ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "4"), $('label[sigric="' + e + '"]').text(ico.down).css("color", "#ff7171")) : mes.payload.put < 75 && 64 < mes.payload.put ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "3"), $('label[sigric="' + e + '"]').text(ico.down).css("color", "#ff7171")) : mes.payload.put < 65 && 55 < mes.payload.put ? (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "2"), $('label[sigric="' + e + '"]').text(ico.stand).css("color", "#ffb850")) : (document.querySelector('span[ric="' + e + '"]').setAttribute("data-bars", "1"), $('label[sigric="' + e + '"]').text(ico.non).css("color", "#54565f"))))), "opened" == mes.event && (orate = mes.payload.open_rate, direct = mes.payload.trend, cbal = 0), "balance_changed" == mes.event && ("demo" == mes.payload.account_type ? (demobal = mes.payload.amount / 100, $("#curbald").html(demobal.toLocaleString() + " " + curcur), 1 == cbal && (cbaldemo = demobal)) : "real" == mes.payload.account_type && (realbal = mes.payload.amount / 100, $("#curbalr").html(realbal.toLocaleString() + " " + curcur), 1 == cbal && (cbalreal = realbal)), 1 == cbal && (closeBal = mes.payload.amount / 100)), "close_deal_batch" == mes.event && (cbal = 1, chkcandle = 0, "loose" == (ires = orate == (crate = mes.payload.end_rate) ? "stand" : crate < orate ? "put" == direct ? "win" : "loose" : "call" == direct ? "win" : "loose") ? marti += 1 : "win" == ires ? marti = 0 : marti += 0, console.log(ires), 1 == run && (closeBal >= Number($("#bel_maxbal").val().replace(/,/g, "")) ? (console.log("MAXIMUM TARGET REACHED!!"), marti = 0, $("#start_stop").click()) : (marti > Number($("#bel_mar").val()) && (console.log("MAX MARTINGALE!!"), marti = 0, ires = "win"), c()))), "change_asset" == mes.event && (console.log("WR change : for " + mes.payload.ric + " from " + $("#rate").text() + " to " + mes.payload.base_payment_rate_turbo + " %"), $('input[value="' + mes.payload.ric + '"]').attr("winr", mes.payload.base_payment_rate_turbo), $("span[cric='" + mes.payload.ric + "']").text(mes.payload.base_payment_rate_turbo + " %"), o())
                }, ws.onerror = e => {
                    ws.close(), console.log("Wss Socket Error : ", e)
                }
            }(), 0 == clocktime && (clocktime = 1, $(".investments > div:nth-child(3) > p").on("DOMSubtreeModified", function() {
                setInterval(a, 1e3)
            })), document.getElementById("tmv").addEventListener("mousedown", function(e) {window.addEventListener("mousemove", b, !0)}, !1), window.addEventListener("mouseup", function() {window.removeEventListener("mousemove", b, !0)}, !1)
    }, 5e3)
}()
